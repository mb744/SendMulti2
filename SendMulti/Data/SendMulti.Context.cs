//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SendMulti.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ReportServerEntities : DbContext
    {
        public ReportServerEntities()
            : base("name=ReportServerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<GetSubscriptionInfo_Result> GetSubscriptionInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubscriptionInfo_Result>("GetSubscriptionInfo");
        }
    
        public virtual ObjectResult<GetSubscriptionInfoFromStoreNameandSite_Result> GetSubscriptionInfoFromStoreNameandSite(string storeName, Nullable<int> site)
        {
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var siteParameter = site.HasValue ?
                new ObjectParameter("Site", site) :
                new ObjectParameter("Site", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubscriptionInfoFromStoreNameandSite_Result>("GetSubscriptionInfoFromStoreNameandSite", storeNameParameter, siteParameter);
        }
    
        public virtual ObjectResult<GetSubscription_Result> GetSubscription(Nullable<System.Guid> subscriptionID)
        {
            var subscriptionIDParameter = subscriptionID.HasValue ?
                new ObjectParameter("SubscriptionID", subscriptionID) :
                new ObjectParameter("SubscriptionID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubscription_Result>("GetSubscription", subscriptionIDParameter);
        }
    }
}
